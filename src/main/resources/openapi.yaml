openapi: 3.0.1
info:
  title: Jacken CRUD API
  description: API f端r die Verwaltung von Jacken.
  version: "1.0"
  contact:
    name: Ihr Name
    email: ihre-email@example.com
    url: https://example.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
paths:
  /jacken:
    get:
      summary: Gibt alle Jacken zur端ck
      description: Ruft eine Liste aller gespeicherten Jacken ab.
      responses:
        "200":
          description: Erfolgreiche Antwort - Liste der Jacken
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Jacke'
    post:
      summary: Erstellt eine neue Jacke
      description: F端gt eine neue Jacke hinzu.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jacke'
      responses:
        "200": # 201 would be fine, but is not acc to your backend
          description: Jacke erfolgreich erstellt
    # missing: GET /search
  /jacken/{id}:
    get:
      summary: Gibt eine Jacke basierend auf der ID zur端ck
      description: Sucht eine Jacke mit der angegebenen ID.
      parameters:
        - name: id
          in: path
          required: true
          example: 12
          description: Die ID der Jacke.
          schema:
            type: integer
      responses:
        "200":
          description: Erfolgreiche Antwort - Gefundene Jacke
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jacke'
        "404": # ...does not exist
          description: Jacke nicht gefunden
    # missing: DELETE
    # missing: PUT
components:
  schemas:
    Jacke:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
          example: 1
        name:
          type: string
          example: Winterjacke
        brand:
          type: string
          example: Adidas
        size:
          type: string
          example: L
          enum: [XS, S, M, L, XL]
        color:
          type: string
          example: Blau
        season: # should be an enum
          type: string
          example: Winter
        releaseYear:
          type: integer
          example: 2023
